FROM nvcr.io/nvidia/l4t-pytorch:r35.1.0-pth1.13-py3
# Modified from https://github.com/Stonesjtu/pytorch-build-mpi-cuda

ENV PYTORCH_VERSION=1.13.0
ENV TORCHVISION_VERSION=0.14.0
ENV TZ=Asia/Shanghai
ARG DEBIAN_FRONTEND=noninteractive

RUN apt purge -y "*opencv*"; apt purge *openmpi* -y; apt autoremove -y
RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
        build-essential \
        cmake \
        git \
        curl \
        vim \
        wget \
        ca-certificates \
        python3.8 \
        python3.8-dev \
        python3-pip \
        sudo \
        devscripts debhelper fakeroot pkg-config dkms

RUN pip uninstall torch -y

RUN rm /usr/bin/python; ln -s /usr/bin/python3.8 /usr/bin/python

RUN python3 -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -U pip

WORKDIR "/workspace"
# Install gdrcopy
RUN wget -c https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.4.1.tar.gz && tar -xf v2.4.1.tar.gz &&\
    cd gdrcopy-2.4.1/packages && \
    CUDA=/usr/local/cuda ./build-deb-packages.sh && \
    sudo dpkg -i gdrdrv-dkms_*.deb && \
    sudo dpkg -i libgdrapi_*.deb && \
    sudo dpkg -i gdrcopy-tests_*.deb && \
    sudo dpkg -i gdrcopy_*.deb

# Install ucx
RUN wget -c https://github.com/openucx/ucx/archive/refs/tags/v1.16.0.tar.gz &&\
    tar -xf v1.16.0.tar.gz && cd ucx-1.16.0 && ./autogen.sh &&\
    ./contrib/configure-release --prefix=/usr --with-cuda=/usr/local/cuda --enable-mt --disable-cma --with-gdrcopy=/usr &&\
    sudo make -j8 install

# setup openmpi with CUDA
RUN wget -c https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.3.tar.bz2 && \
    tar -xf openmpi-5.0.3.tar.bz2 && cd openmpi-5.0.3 && \
	mkdir build && cd build/ && \
	../configure --with-cuda=/usr/local/cuda --with-cuda-libdir=/usr/local/cuda/lib64/stubs --with-ucx=/usr && \
	make -j $(nproc) all && \
	sudo make install && \
	sudo ldconfig

# Build pytorch
RUN wget -c https://github.com/pytorch/pytorch/releases/download/v${PYTORCH_VERSION}/pytorch-v${PYTORCH_VERSION}.tar.gz && \
    tar -xf pytorch-v${PYTORCH_VERSION}.tar.gz && cd pytorch-v${PYTORCH_VERSION} && \
    pip install -U cmake ninja ptvsd && pip install -r requirements.txt

# TORCH_CUDA_ARCH_LIST needs to be specified according to the GPU. 
# 2080Ti corresponds to 7.5; jetson nx xavier corresponds to 7.2; 3060 corresponds to 8.6
RUN cd pytorch-v${PYTORCH_VERSION}; TORCH_CUDA_ARCH_LIST="7.2" MAX_JOBS=2 python setup.py install

# Build torchvision
RUN wget -c https://github.com/pytorch/vision/archive/refs/tags/v${TORCHVISION_VERSION}.tar.gz &&\
    tar -xf v${TORCHVISION_VERSION}.tar.gz &&\
    cd vision-${TORCHVISION_VERSION} &&\
    pip install -U pillow -i https://pypi.tuna.tsinghua.edu.cn/simple &&\
    PYTORCH_VERSION=$(pip list | grep torch | head -1 | awk '{print $2}') python setup.py install

RUN CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda CUDA_ARCH=72 pip install git+https://github.com/src-d/kmcuda.git#subdirectory=src

# Build taichi  (Note you must change .github/.../python.py and sscache.py)
# issue: https://github.com/taichi-dev/taichi/issues/6787
RUN  apt install -y clang-12 --no-install-recommends; git clone --recursive https://github.com/taichi-dev/taichi && cd taichi && export TAICHI_CMAKE_ARGS="-DTI_WITH_VULKAN:BOOL=OFF -DTI_WITH_CUDA:BOOL=ON" && ./build.py && pip install dist/*.whl

RUN apt install --no-install-recommends -y openssh-client openssh-server python3-opencv
# ISSUE: https://github.com/open-mpi/ompi/issues/12431

RUN apt install -y sudo git vim curl wget python3-pip iproute2
RUN sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'; curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -; sudo apt update; sudo apt install -y ros-noetic-ros-base python3-rosdep
RUN apt install -y ros-noetic-joint-state-publisher ros-noetic-robot-state-publisher
# set python to python3.8
RUN rm /usr/bin/python; ln -s /usr/bin/python3.8 /usr/bin/python


WORKDIR "/project"



